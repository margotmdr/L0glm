% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/L0glm_inference.R
\name{L0glm.inference}
\alias{L0glm.inference}
\title{Inference on L0glm Models}
\usage{
L0glm.inference(fit, level = 0.95, boot.repl = 200, control.l0,
  control.iwls, control.fit, verbose = TRUE)
}
\arguments{
\item{fit}{an \code{L0glm} object (see \code{\link{L0glm}}).}

\item{level}{the confidence level of the confidence interval. \code{level} must be in
\eqn{[0,1]} (e.g. \code{level = 0.95} means a 95\% confidence interval).}

\item{boot.repl}{the number of bootstrap replicates. Only used if non parametric bootstrapping
is performed (see Details).}

\item{control.l0}{a list of parameters controling the L0 penalty loop (see \code{\link{control.l0.gen}}
and \code{\link{L0glm}}). This should be the same parameters as used
to compute \code{fit}.}

\item{control.iwls}{a list of parameters controling the L0 penalty loop (see \code{\link{control.iwls.gen}}
and \code{\link{L0glm}}).This should be the same parameters as used
to compute \code{fit}.}

\item{control.fit}{a list of parameters controling the L0 penalty loop (see \code{\link{control.fit.gen}}
and \code{\link{L0glm}}).This should be the same parameters as used
to compute \code{fit}.}

\item{verbose}{print algorithm progression to console ?}
}
\value{
\code{L0glm.inference} returns a list containing the following elements:
\item{\code{CI.lower}}{The lower bound of the confidence interval for every
coefficient.}
\item{\code{CI.upper}}{The lower upper of the confidence interval for every
coefficient.}
\item{\code{constraint}}{The constraint used to compute \code{fit}. "nonneg"
for nonnegativity constraint; "none" if there was no constraint.}
\item{\code{estimates}}{The estimated coefficients (see coefficients in \code{\link{L0glm}}).}
\item{\code{family}}{The error structure used to fit the data.}
\item{\code{method}}{The inference method used (see details).}
\item{\code{p.value}}{The infered type I error rate for every estimate.}
\item{\code{penalty}}{The type of penalty used to compute \code{fit}.}
\strong{If inference is performed using the Fischer information matrix}
\item{\code{SE}}{The standard error on the estimates}
\item{\code{vcov}}{The variance-covariance matrix of the estimates.}
\item{\code{z}}{The z-score associated to every }
\strong{If inference is performed using bootstrapping}
\item{\code{boot.result}}{The output of the bootstrapping. See \code{\link{boot}}
for more details.}
}
\description{
Performs inference on the estimated coefficients of an \code{L0glm} object.
}
\details{
The inference is performed using two distinct methods according to the
constraint and the type of penalty used for fitting the \code{L0glm} object.
If no constraint and no penalty or ridge penalty were applied, the inference
is performed based on the Fischer information matrix. Otherwise, inference
is performed using non parametric percentile bootstrapping.

In the case of unconstrained fit, the test hypotheses are:
\itemize{
\item H0: coef = 0
\item H1: coef != 0
}
In the case of nonnegativity constraint, the test hypotheses are:
\itemize{
\item H0: coef = 0
\item H1: coef > 0
}

\strong{Fischer information matrix}

The returned confidence intervals are Wald confidence intervals.

\strong{Non parametric percentile boostrapping}
}
\examples{
# Simulate data
sim <- simulate_spike_train()
X <- sim$X
y <- sim$y

# Set up the control parameters of the fitting procedure
ctrl.fit <- control.fit.gen()
ctrl.iwls <- control.iwls.gen(maxit = 1)
ctrl.l0 <- control.l0.gen() # No L0 penalty

# Fit data using a small ridge penalty
L0glm_fit <- L0glm(X = X, y = y, family = poisson(identity), intercept = FALSE,
                   nonnegative = TRUE, lambda = 1, tune.meth = "none", control.fit = ctrl.fit,
                   control.iwls = ctrl.iwls, control.l0 = ctrl.l0)

\donttest{ # Code below is computationally costly
# Perform inference on the coefficients
system.time(L0glm_infer <- L0glm.inference(L0glm_fit, level = 0.95, boot.repl = 1000,
                                           control.fit = ctrl.fit,
                                           control.iwls = ctrl.iwls, control.l0 = ctrl.l0))
# Plot results
plot_L0glm_benchmark(x = sim$x, y = y, fit = L0glm_fit, inference = L0glm_infer, a.true = sim$a,
                     main="Ground truth vs L0glm estimates (with ridge penalty)")
}
}
\seealso{
\code{\link{L0glm}}, \code{\link{control.l0.gen}}, \code{\link{control.iwls.gen}},
\code{\link{control.fit.gen}}, \code{\link{boot}}
}
