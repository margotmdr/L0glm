% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{simulate_spike_train}
\alias{simulate_spike_train}
\title{Simulate example data (blurred spike train)}
\usage{
simulate_spike_train(n = 100, p = n, k = 10, mean_beta = 1000,
  sd_logbeta = 1, family = c("poisson", "gaussian"), sd_noise = 1,
  psf = function(x, u, w = 2.5) exp(((x - u)^2)/(-2 * (w^2))),
  seed = 123, Plot = TRUE)
}
\arguments{
\item{n}{Number of observations (time points of the response signal).}

\item{p}{Number of features (shifted copies of the blur kernel). Defaults to
\code{n}. A situation with \code{p > n} implies that superresolution
deconvolution will be used.}

\item{k}{Number of non-zero coefficients. Smaller values imply greater
sparsity in the coefficients. This value should be smaller than \code{p}.}

\item{mean_beta}{The non-zero coefficients are drawn from a log-normal
distribution with mean \code{mean_beta} and standard deviation (on a log
scale) of \code{sd_logbeta}.}

\item{sd_logbeta}{The non-zero coefficients are drawn from a log-normal
distribution with mean \code{mean_beta} and standard deviation (on a log
scale) of \code{sd_logbeta}.}

\item{family}{Noise model - currently \code{"poisson"} or \code{"gaussian"}
are supported, with \code{"poisson"} default.}

\item{sd_noise}{Standard deviation of the noise when
\code{family="gaussian"}.}

\item{psf}{Point spread function to use to blur spike signal with. Should be
a function with as first two expected arguments \code{x} (time) and
\code{u} (the mode of the peak). Defaults to a Gaussian psf
\code{function(x, u, w=2.5) exp(((x-u)^2)/(-2*(w^2)))}.}

\item{seed}{The seed used to sample the nonzero coefficients and to generate
the noisy response signal.}

\item{Plot}{should the generated data be plotted?}
}
\description{
This function generates synthetic data consisting of a time series made of a
spike train convoluted by a Gaussian blur kernel ("point spread function")
with Poisson or Gaussian noise on the observed signal. Data of this form are
commonly encountered in the context of various signal deconvolution problems,
where one would like to deconvolute an observed blurry and noisy signal with
a known blur kernel (psf) assuming a given noise model. For example, in Gas
chromatography/Mass spectrometry one would be interested in deconvoluting a
chromatogram, which is a noisy version of an unknown number of superimposed
blurred peaks, by a given measured peak shape function / blur kernel.
The objective is to recover the underlying spike train
(chromatogram peaks in the GC/MS example) used to generate the data by
regressing the observed noisy signal onto a banded matrix consisting of
shifted copies of the Gaussian kernel used to blur the true signal. The
simulated error can be specified to be either Poisson or Gaussian.

The function is used as a test case in the \code{\link{L0glm}} examples.
}
